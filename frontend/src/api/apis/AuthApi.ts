/* tslint:disable */
/* eslint-disable */
/**
 * Some API This is a sample server celler server.
 *
 * The version of the OpenAPI document: 1.0 Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech Do not edit the class manually.
 */

import * as runtime from "../runtime";
import type {
	ControllersAuthGetResponse,
	ControllersAuthPostRequest,
	ControllersAuthPostResponse,
	ControllersAuthPostSignInRequest,
	HttputilHTTPError,
} from "../models";
import {
	ControllersAuthGetResponseFromJSON,
	ControllersAuthGetResponseToJSON,
	ControllersAuthPostRequestFromJSON,
	ControllersAuthPostRequestToJSON,
	ControllersAuthPostResponseFromJSON,
	ControllersAuthPostResponseToJSON,
	ControllersAuthPostSignInRequestFromJSON,
	ControllersAuthPostSignInRequestToJSON,
	HttputilHTTPErrorFromJSON,
	HttputilHTTPErrorToJSON,
} from "../models";

export interface V1AuthPostRequest {
	user: ControllersAuthPostRequest;
}

export interface V1AuthSignInPostRequest {
	user: ControllersAuthPostSignInRequest;
}

export class AuthApi extends runtime.BaseAPI {
	/** Get jwt claims Get jwt claims */
	async v1AuthGetRaw(
		initOverrides?: RequestInit | runtime.InitOverrideFunction,
	): Promise<runtime.ApiResponse<ControllersAuthGetResponse>> {
		const queryParameters: any = {};

		const headerParameters: runtime.HTTPHeaders = {};

		const response = await this.request(
			{
				path: `/v1/auth/`,
				method: "GET",
				headers: headerParameters,
				query: queryParameters,
			},
			initOverrides,
		);

		return new runtime.JSONApiResponse(response, (jsonValue) => ControllersAuthGetResponseFromJSON(jsonValue));
	}

	/** Get jwt claims Get jwt claims */
	async v1AuthGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ControllersAuthGetResponse> {
		const response = await this.v1AuthGetRaw(initOverrides);
		return await response.value();
	}

	/** Create user Create user */
	async v1AuthPostRaw(
		requestParameters: V1AuthPostRequest,
		initOverrides?: RequestInit | runtime.InitOverrideFunction,
	): Promise<runtime.ApiResponse<ControllersAuthPostResponse>> {
		if (requestParameters.user === null || requestParameters.user === undefined) {
			throw new runtime.RequiredError(
				"user",
				"Required parameter requestParameters.user was null or undefined when calling v1AuthPost.",
			);
		}

		const queryParameters: any = {};

		const headerParameters: runtime.HTTPHeaders = {};

		headerParameters["Content-Type"] = "application/json";

		const response = await this.request(
			{
				path: `/v1/auth/`,
				method: "POST",
				headers: headerParameters,
				query: queryParameters,
				body: ControllersAuthPostRequestToJSON(requestParameters.user),
			},
			initOverrides,
		);

		return new runtime.JSONApiResponse(response, (jsonValue) => ControllersAuthPostResponseFromJSON(jsonValue));
	}

	/** Create user Create user */
	async v1AuthPost(
		requestParameters: V1AuthPostRequest,
		initOverrides?: RequestInit | runtime.InitOverrideFunction,
	): Promise<ControllersAuthPostResponse> {
		const response = await this.v1AuthPostRaw(requestParameters, initOverrides);
		return await response.value();
	}

	/** Sign in to user Sign in to user */
	async v1AuthSignInPostRaw(
		requestParameters: V1AuthSignInPostRequest,
		initOverrides?: RequestInit | runtime.InitOverrideFunction,
	): Promise<runtime.ApiResponse<ControllersAuthPostResponse>> {
		if (requestParameters.user === null || requestParameters.user === undefined) {
			throw new runtime.RequiredError(
				"user",
				"Required parameter requestParameters.user was null or undefined when calling v1AuthSignInPost.",
			);
		}

		const queryParameters: any = {};

		const headerParameters: runtime.HTTPHeaders = {};

		headerParameters["Content-Type"] = "application/json";

		const response = await this.request(
			{
				path: `/v1/auth/sign-in/`,
				method: "POST",
				headers: headerParameters,
				query: queryParameters,
				body: ControllersAuthPostSignInRequestToJSON(requestParameters.user),
			},
			initOverrides,
		);

		return new runtime.JSONApiResponse(response, (jsonValue) => ControllersAuthPostResponseFromJSON(jsonValue));
	}

	/** Sign in to user Sign in to user */
	async v1AuthSignInPost(
		requestParameters: V1AuthSignInPostRequest,
		initOverrides?: RequestInit | runtime.InitOverrideFunction,
	): Promise<ControllersAuthPostResponse> {
		const response = await this.v1AuthSignInPostRaw(requestParameters, initOverrides);
		return await response.value();
	}
}
